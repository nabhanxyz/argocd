global:
  domain: argocd.nabhan.xyz

redis-ha:
  enabled: false

controller:
  replicas: 1

server:
  config:
    url: https://argocd.nabhan.xyz
  autoscaling:
    enabled: true
    minReplicas: 1
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

repoServer:
  autoscaling:
    enabled: true
    minReplicas: 1

applicationSet:
  replicaCount: 1

crds:
  # -- Install and upgrade CRDs
  install: true

configs:
  cm:
    accounts.mike: apikey, login
    server.insecure: "true"
    dex.config: |
      connectors:
        - type: oidc
          name: authentik
          id: authentik
          config:
            insecureEnableGroups: true
            getUserInfo: true
            issuer: $argocd-oauth:oidc.authentik.oauthURL
            clientID: $argocd-oauth:oidc.authentik.clientID
            clientSecret: $argocd-oauth:oidc.authentik.clientSecret
            scopes:
              - openid
              - profile
              - email


  rbac:
    policy.csv: |
      g, mike, role:admin
      g, admin, role:admin
      g, infra, role:admin

    policy.default: role:readonly
